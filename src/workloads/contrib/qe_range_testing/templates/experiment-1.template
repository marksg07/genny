SchemaVersion: 2018-07-01
Owner: "@10gen/server-security"
Description: |
  Queryable Encryption Range Experiment 1

Encryption:
  {% if use_crypt_shared_lib %}
  UseCryptSharedLib: true
  CryptSharedLibPath: {{ crypt_shared_lib_path }}
  {% endif %}
  EncryptedCollections:
  - Database: &encrypted_db genny_qerangebench_experiment1
    Collection: &encrypted_coll OneFieldOneValue
    EncryptionType: queryable

    QueryableEncryptedFields:
      field1: { type: "int", queries: [{queryType: "rangePreview", min: 0, max: {{ upper_bound }}, contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }

Clients:
  EncryptedPool:
    QueryOptions:
      maxPoolSize: 400
    EncryptionOptions:
      KeyVaultDatabase: "keyvault"
      KeyVaultCollection: "datakeys"
      EncryptedCollections:
      - genny_qerangebench_experiment1.OneFieldOneValue

Actors:
  - Name: InsertActor
    Type: CrudActor
    Threads: {{ insert_threads }}
    Database: *encrypted_db
    ClientName: &encrypted_pool EncryptedPool
    Phases:
    - Repeat: {{ document_count // insert_threads }}
      Collection: *encrypted_coll
      MetricsName: "load"
      Operations:
      - OperationName: insertOne
        OperationMetricsName: inserts
        OperationCommand:
          Document:
            field1: 0
            _id: {^Inc: {start: -100000, multiplier: 50000}}
    - &nop {Nop: true}

  # We have a separate single-thread actor, each of which performs a different 1/(query_threads) of the queries.
  {% for t in range(query_threads) %}
  - Name: PreDefinedRangeQueryActor_Thread{{ t }}
    Type: CrudActor
    Threads: 1
    Database: *encrypted_db
    ClientName: *encrypted_pool
    Phases:
    - *nop
    - Repeat: {{ query_count // query_threads }}
      Collection: *encrypted_coll
      MetricsName: "query"
      Operations:
      - OperationName: find
        OperationMetricsName: range_query
        OperationCommand:
          Filter: {field1: {
              $gte: {^ConvertToInt32: {from: {^ChooseFromDataset:{"path": "{{ query_min_file }}", "sequential": true, "startFromLine": {{ t * query_count // query_threads }}}}}},
              $lte: {^ConvertToInt32: {from: {^ChooseFromDataset:{"path": "{{ query_max_file }}", "sequential": true, "startFromLine": {{ t * query_count // query_threads }}}}}}
            }
          }

 {% endfor %}


  - Name: LoggingActor0
    Type: LoggingActor
    Threads: 1
    Phases:
      - Nop: true
      - Phase: 1
        LogEvery: 5 minutes
        Blocking: None

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - single-replica-fle
    branch_name:
      $gte: v7.0
