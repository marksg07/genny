SchemaVersion: 2018-07-01
Owner: "@10gen/server-security"
Description: |
  Queryable Encryption Range Experiment 2

GlobalDefaults:
  Database: &encrypted_db genny_qerangebench_experiment2
  Collection: &encrypted_coll ContiguousValuesFreqOne
  ClientName: &encrypted_pool EncryptedPool
  Nop: &nop {Nop: true}
  LastPhase: &last_phase {{ experiments|length }}

Encryption:
  {% if use_crypt_shared_lib %}
  UseCryptSharedLib: true
  CryptSharedLibPath: {{ crypt_shared_lib_path }}
  {% endif %}
  EncryptedCollections:
  - Database: *encrypted_db
    Collection: *encrypted_coll
    EncryptionType: queryable

    QueryableEncryptedFields:
      f_sint32_1: { type: "int", queries: [{queryType: "rangePreview", min: -2147483648, max: 2147483647, contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }
      f_sint32_2: { type: "int", queries: [{queryType: "rangePreview", min: 1, max: 100000, contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }
      f_bin64_1: { type: "double", queries: [{queryType: "rangePreview", contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }
      f_bin64_2: { type: "double", queries: [{queryType: "rangePreview", min: -100, max: 100, precision: 4, contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }
      f_dec128_1: { type: "decimal", queries: [{queryType: "rangePreview", contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }
      f_dec128_2: { type: "decimal", queries: [{queryType: "rangePreview", min: -50000000, max: 50000000, precision: 4, contention: {{ contention_factor }}, sparsity: {{ sparsity }}}] }

Clients:
  EncryptedPool:
    QueryOptions:
      maxPoolSize: 400
    EncryptionOptions:
      KeyVaultDatabase: "keyvault"
      KeyVaultCollection: "datakeys"
      EncryptedCollections:
      - genny_qerangebench_experiment2.ContiguousValuesFreqOne

Actors:
{% for t in range(insert_threads) %}
  - Name: InsertActor_Thread{{ t }}
    Type: CrudActor
    Threads: 1
    Database: *encrypted_db
    ClientName: *encrypted_pool
    Phases:
      OnlyActiveInPhases:
        Active: [0]
        NopInPhasesUpTo: *last_phase
        PhaseConfig:
          Repeat: {{ document_count // insert_threads }}
          Collection: *encrypted_coll
          MetricsName: "load"
          Operations:
          - OperationName: insertOne
            OperationMetricsName: inserts
            OperationCommand:
              Document:
                f_sint32_1: {^ConvertToInt32: {from: {^ChooseFromDataset:{"path": "{{ onesfile }}", "sequential": true, "startFromLine": {{ t * document_count // insert_threads }}}}}}
                f_sint32_2: {^ConvertToInt32: {from: {^ChooseFromDataset:{"path": "{{ onesfile }}", "sequential": true, "startFromLine": {{ t * document_count // insert_threads }}}}}}
                f_bin64_1: {^ConvertToDouble: {from: {^ChooseFromDataset:{"path": "{{ onesfile }}", "sequential": true, "startFromLine": {{ t * document_count // insert_threads }}}}}}
                f_bin64_2: {^ConvertToDouble: {from: {^ChooseFromDataset:{"path": "{{ tenthoufile }}", "sequential": true, "startFromLine": {{ t * document_count // insert_threads }}}}}}
                f_dec128_1: {^ConvertToDecimal: {from: {^ChooseFromDataset:{"path": "{{ onesfile }}", "sequential": true, "startFromLine": {{ t * document_count // insert_threads }}}}}}
                f_dec128_2: {^ConvertToDecimal: {from: {^ChooseFromDataset:{"path": "{{ tenthoufile }}", "sequential": true, "startFromLine": {{ t * document_count // insert_threads }}}}}}
                _id: {^Inc: {start: 0, multiplier: {{ document_count // insert_threads }}}}
{% endfor %}


  - Name: PreDefinedRangeQueryActor
    Type: CrudActor
    Threads: 1
    Database: *encrypted_db
    ClientName: *encrypted_pool
    Phases:
    - *nop
{% for experiment in experiments %}
    - Repeat: {{ query_count }}
      Collection: *encrypted_coll
      MetricsName: "query"
      Operations:
      - OperationName: find
        OperationMetricsName: range_query_{{experiment.field_name}}_{{experiment.query_type}}_sel{{experiment.selectivity}}
        OperationCommand:
          Filter: { {{experiment.field_name}}: {
              $gte: {^ConvertTo{{experiment.field_type}}: {from: {^ChooseFromDataset:{"path": "{{ experiment.min_file }}", "sequential": true}}}},
              $lte: {^ConvertTo{{experiment.field_type}}: {from: {^ChooseFromDataset:{"path": "{{ experiment.max_file }}", "sequential": true}}}}
            }
          }
{% endfor %}

  - Name: LoggingActor0
    Type: LoggingActor
    Threads: 1
    Phases:
      - Phase: 0..{{ experiments|length }}
        LogEvery: 5 minutes
        Blocking: None

AutoRun:
- When:
    mongodb_setup:
      $eq:
      - single-replica-fle
    branch_name:
      $gte: v7.0
